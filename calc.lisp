(defvar a)
(defvar b)
(defvar c)
(defvar d)

(defun bits (value)
(write-line "Binary value:")
(format t "~B" value)
(terpri))

(defun multiply (i)
(if(/= 0 (logand b (ash 1 i)))
(setq d (+ d (ash a i)))))

(write-line "Enter A:")
(setq a(read))
(bits a)
(write-line "Enter B:")
(setq b(read))
(bits b)

(sb-thread:make-thread (lambda ()
(progn (sleep 1)
(setq c (+ a b))
(write-line "Addition is:")
(print c)
(terpri)
(bits c)
(write-line (sb-thread:thread-name sb-thread:*current-thread*)))):name "Addition-Thread")

(sb-thread:make-thread (lambda ()
(progn (sleep 2)
(setq c (- a b))
(write-line "Subtraction is:")
(print c)
(terpri)
(bits c)
(write-line (sb-thread:thread-name sb-thread:*current-thread*)))):name "Subtraction-Thread")

(setq d 0)
(loop for i from 0 to 63
do(sb-thread:make-thread (lambda () (progn (multiply i)))))
(write-line "Product is:")
(print d)
(terpri)
(bits d)
